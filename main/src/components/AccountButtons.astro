---
const {user} = Astro.props
---
<div class="absolute top-4 right-4 text-center">
  {user && (
    <div class="relative inline-block text-left">
      <div>
        <button type="button" class="inline-flex justify-center w-full rounded-md border border-gray-400 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-red-500" id="options-menu" aria-haspopup="true" aria-expanded="true">
          {`Hello, ${user}`}
          <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </button>
      </div>

      <div class="origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-gray-700 ring-opacity-5 divide-y divide-gray-200 hidden" role="menu" aria-orientation="vertical" aria-labelledby="options-menu" id="dropdown-menu">
        <div class="py-1" role="none">
          <a href="/changePassword" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900" role="menuitem">Change Password</a>
        </div>
        <div class="py-1" role="none">
          <a id="login" href={`${Astro.url.origin}/login`} class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900" role="menuitem">Sign Out</a>
        </div>
        <div class="py-1" role="none">
          <button id="deleteAccount" class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-100 hover:text-red-900" role="menuitem">Delete Account</button>
        </div>
      </div>
    </div>
  )}
  {!user && (
    <a id="login" href={`${Astro.url.origin}/login`} class="block mb-1 bg-red-600 text-white px-6 py-3 text-base font-medium rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-600 focus:ring-offset-2">
      Login
    </a>
  )}
</div>

<!-- Delete Account Modal -->
<div id="deleteAccountModal" class="fixed z-10 inset-0 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
            <svg class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
            </svg>
          </div>
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">Delete Account</h3>
            <div class="mt-2">
              <p class="text-sm text-gray-500">Are you sure you want to delete your account? This action cannot be undone.</p>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button type="button" id="confirmDelete" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm">Delete</button>
        <button type="button" id="cancelDelete" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">Cancel</button>
      </div>
    </div>
  </div>
</div>

<script>
  const dropdownButton = document.getElementById('options-menu');
  const dropdownMenu = document.getElementById('dropdown-menu');
  const deleteAccountButton = document.getElementById('deleteAccount');
  const deleteAccountModal = document.getElementById('deleteAccountModal');
  const confirmDeleteButton = document.getElementById('confirmDelete');
  const cancelDeleteButton = document.getElementById('cancelDelete');

  dropdownButton?.addEventListener('click', function() {
    dropdownMenu?.classList.toggle('hidden');
  });

  // Close the dropdown when clicking outside
  window.addEventListener('click', function(event) {
    if (!dropdownButton?.contains(event.target as Node)) {
      dropdownMenu?.classList.add('hidden');
    }
  });

  deleteAccountButton?.addEventListener('click', function() {
    deleteAccountModal?.classList.remove('hidden');
  });

  cancelDeleteButton?.addEventListener('click', function() {
    deleteAccountModal?.classList.add('hidden');
  });

  confirmDeleteButton?.addEventListener('click', async function() {
    try {
      const response = await fetch('/api/deleteAccount', {
        method: 'POST',
        credentials: 'same-origin'
      });
      
      if (response.ok) {
        // Account deleted successfully
        window.location.replace("/");
      } else {
        alert('Failed to delete account. Please try again.');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred. Please try again.');
    }
    deleteAccountModal?.classList.add('hidden');
  });
</script>