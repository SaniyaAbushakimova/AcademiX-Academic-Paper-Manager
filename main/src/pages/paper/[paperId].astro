---
import Layout from "../../layouts/Layout.astro"
import UserComments from "../../components/UserComments"
import LoginButton from "../../components/AccountButtons.astro";
import PaperResult from "../../components/PaperResult.astro";
import BookmarkButton from "../../components/BookmarkButton.astro";
import 'katex/dist/katex.min.css';
import katex from 'katex';
import mysql from 'mysql2/promise'

const {paperId} = Astro.params

const userCookie = Astro.cookies.get("username")
const user = userCookie ? userCookie.value : ""
const con = await mysql.createConnection({
  host: import.meta.env.DB_HOST,
  user: import.meta.env.DB_USER,
  password: import.meta.env.DB_PASSWORD,
  database: import.meta.env.DB_DATABASE,
  port: import.meta.env.DB_PORT,
})

try {
  if (user) {
    const [user_result] = await con.execute(
      "SELECT userId FROM UserInfo WHERE username = ?",
      [user]
    )
    const userId = user_result[0].userId
    const [result] = await con.execute(
      "INSERT INTO Actions (userId, paperId, actionType) VALUES (?, ?, ?)",
      [userId, paperId, "view"]
    )
  } else {
    const [result] = await con.execute(
      `UPDATE Arxiv SET views = views + 1 WHERE paperId = ?`,
      [paperId]
    )
  }
} catch(error) {
  console.log("cant update view")
} finally {
  await con.end()
}

// fetch paper based on paperId dynamic route
const cur_paper = await fetch(new URL(`/api/paper/${paperId}`, Astro.url)).then(r => r.json())
const comments = await fetch(new URL(`/api/comments/${paperId}`, Astro.url)).then(r => r.json())
const rec_papers = await fetch(new URL(`/api/similar/${paperId}`, Astro.url)).then(r => r.json())

function truncateString(str, maxLength) {
  	return str.length > maxLength ? str.slice(0, maxLength) + '...' : str;
}

function renderLatex(text) {
  return text.replace(/\$\$(.*?)\$\$|\$(.*?)\$/g, (match, p1, p2) => {
    const tex = p1 || p2;
    try {
      return katex.renderToString(tex, { throwOnError: false, displayMode: !!p1 });
    } catch (e) {
      console.error('KaTeX error:', e);
      return match; // Return the original string if rendering fails
    }
  });
}

const renderedTitle = renderLatex(cur_paper.title);
const renderedAbstract = renderLatex(cur_paper.abstract);
---

<head>
  <meta charset="UTF-8">
</head>
<Layout>
  <LoginButton user={user}/>
  <div class="max-w-5xl mx-auto px-4 py-8">
    <h1 class="text-3xl font-b  old text-red-600 mb-4" set:html={renderedTitle}></h1>

    <div class="mb-4">
      <BookmarkButton paperId={paperId} user={user} />
    </div>
    
    <div class="mb-6">
      <h2 class="text-xl font-semibold mb-2">Authors</h2>
      <p>{cur_paper.authors}</p>
    </div>
    
    <div class="mb-6">
      <h2 class="text-xl font-semibold mb-2">Details</h2>
      <p><span class="font-medium">ArxivID:</span> {cur_paper.arxivId}</p>
      <p><span class="font-medium">Date Updated:</span> {cur_paper.update_date.split("T")[0]}</p>
      <p><span class="font-medium">Comments:</span> {cur_paper.comments}</p>
    </div>
    
    <div class="mb-6">
      <h2 class="text-xl font-semibold mb-2">Abstract</h2>
      <!-- Render the abstract with MathJax -->
      <p class="text-gray-700" set:html={renderedAbstract}></p>
    </div>
    
    <div class="mb-6">
      <h2 class="text-xl font-semibold mb-2">Keywords</h2>
      <div class="flex flex-wrap gap-2">
        {cur_paper.tags.split(" ").map(keyword => (
          <span class="bg-red-100 text-red-700 px-3 py-1 rounded-full text-sm">{keyword}</span>
        ))}
      </div>
    </div>
    
    <div class="mb-6">
      <h2 class="text-xl font-semibold mb-2">Views</h2>
      <p>{cur_paper.views} views</p>
    </div>

    <div class="mb-6">
      <div class="flex items-center mb-2">
        <h2 class="text-xl font-semibold mr-4">Full Paper</h2>

        <a href=`https://arxiv.org/abs/${cur_paper.arxivId}` target="_blank" rel="noopener noreferrer" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
          Arxiv Link
        </a>
      </div>
      <iframe 
      src={`https://arxiv.org/pdf/${cur_paper.arxivId}.pdf`} 
      width="100%" 
      height="600px"
      style="border: none;">
      </iframe>
    </div>

    <UserComments user={user} paperId={paperId} comments={comments} client:load/>

    <div class="mb-6">
      <h2 class="text-xl font-semibold mr-4">Related Papers</h2>
      <div class="flex-grow flex flex-col p-8 relative">
          <div class="max-w-full mx-auto mt-4">
            {rec_papers.map((res) => (
              <PaperResult
                paperId={res.paperId}
                title={res.title}
                authors={truncateString(res.authors, 300)}
                comments={truncateString(res.comments, 500)}
                abstract={truncateString(res.abstract, 1000)}
                tags={res.tags.split(" ")}
                date={res.date}
                views={res.views}
              />
            ))}
        </div>
      </div>
    </div>
  </div>
</Layout>
